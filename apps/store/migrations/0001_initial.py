# Generated by Django 4.0.2 on 2022-03-03 13:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
            ],
            options={
                'db_table': 'cart_item',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
            ],
            options={
                'db_table': 'order_status',
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=50, unique=True)),
            ],
            options={
                'db_table': 'payment_type',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Название товара')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='Кол-во на складе')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('description', models.TextField(verbose_name='Описание')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='store.category', verbose_name='Категория')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'vendor',
            },
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=11, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('date_actual', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'db_table': 'product_price',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='product/default_product.png', upload_to='product')),
                ('is_main', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'db_table': 'product_image',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='products', to='store.vendor', verbose_name='Производитель'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, null=True, verbose_name='Имя')),
                ('surname', models.CharField(max_length=45, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(max_length=45, null=True, verbose_name='Отчество')),
                ('phone_number', models.CharField(db_index=True, max_length=12, null=True, verbose_name='Номер телефона')),
                ('email', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Электронная почта')),
                ('date_start', models.DateTimeField(blank=True, null=True, verbose_name='Дата создания заказа')),
                ('date_end', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения заказа')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес доставки')),
                ('payment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='store.paymenttype', verbose_name='Способ оплаты')),
                ('products', models.ManyToManyField(through='store.CartItem', to='store.Product')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='store.orderstatus', verbose_name='Статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.AddField(
            model_name='cartitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.order'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='store.product'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('product', 'order')},
        ),
    ]
